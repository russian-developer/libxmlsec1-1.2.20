<refentry id="xmlsec-openssl-crypto">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-openssl-crypto.top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC-OPENSSL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>crypto</refname>
<refpurpose>Crypto transforms implementation for OpenSSL.</refpurpose>
</refnamediv>

<refsynopsisdiv id="xmlsec-openssl-crypto.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link>  <link linkend="xmlSecCryptoGetFunctions-openssl">xmlSecCryptoGetFunctions_openssl</link>
                                                        (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLInit">xmlSecOpenSSLInit</link>                   (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLShutdown">xmlSecOpenSSLShutdown</link>               (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeysMngrInit">xmlSecOpenSSLKeysMngrInit</link>           (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLGenerateRandom">xmlSecOpenSSLGenerateRandom</link>         (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> size);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLSetDefaultTrustedCertsFolder">xmlSecOpenSSLSetDefaultTrustedCertsFolder</link>
                                                        (const <link linkend="xmlChar">xmlChar</link> *path);
const <link linkend="xmlChar">xmlChar</link>*      <link linkend="xmlSecOpenSSLGetDefaultTrustedCertsFolder">xmlSecOpenSSLGetDefaultTrustedCertsFolder</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataAesId">xmlSecOpenSSLKeyDataAesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataAesGetKlass">xmlSecOpenSSLKeyDataAesGetKlass</link>     (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataAesSet">xmlSecOpenSSLKeyDataAesSet</link>          (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define             <link linkend="xmlSecOpenSSLTransformAes128CbcId">xmlSecOpenSSLTransformAes128CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformAes128CbcGetKlass">xmlSecOpenSSLTransformAes128CbcGetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformAes192CbcId">xmlSecOpenSSLTransformAes192CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformAes192CbcGetKlass">xmlSecOpenSSLTransformAes192CbcGetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformAes256CbcId">xmlSecOpenSSLTransformAes256CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformAes256CbcGetKlass">xmlSecOpenSSLTransformAes256CbcGetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformKWAes128Id">xmlSecOpenSSLTransformKWAes128Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformKWAes128GetKlass">xmlSecOpenSSLTransformKWAes128GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformKWAes192Id">xmlSecOpenSSLTransformKWAes192Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformKWAes192GetKlass">xmlSecOpenSSLTransformKWAes192GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformKWAes256Id">xmlSecOpenSSLTransformKWAes256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformKWAes256GetKlass">xmlSecOpenSSLTransformKWAes256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataDesId">xmlSecOpenSSLKeyDataDesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataDesGetKlass">xmlSecOpenSSLKeyDataDesGetKlass</link>     (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataDesSet">xmlSecOpenSSLKeyDataDesSet</link>          (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define             <link linkend="xmlSecOpenSSLTransformDes3CbcId">xmlSecOpenSSLTransformDes3CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformDes3CbcGetKlass">xmlSecOpenSSLTransformDes3CbcGetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformKWDes3Id">xmlSecOpenSSLTransformKWDes3Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformKWDes3GetKlass">xmlSecOpenSSLTransformKWDes3GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataDsaId">xmlSecOpenSSLKeyDataDsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataDsaGetKlass">xmlSecOpenSSLKeyDataDsaGetKlass</link>     (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataDsaAdoptDsa">xmlSecOpenSSLKeyDataDsaAdoptDsa</link>     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="DSA--CAPS">DSA</link> *dsa);
<link linkend="DSA--CAPS">DSA</link>*                <link linkend="xmlSecOpenSSLKeyDataDsaGetDsa">xmlSecOpenSSLKeyDataDsaGetDsa</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataDsaAdoptEvp">xmlSecOpenSSLKeyDataDsaAdoptEvp</link>     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);
<link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           <link linkend="xmlSecOpenSSLKeyDataDsaGetEvp">xmlSecOpenSSLKeyDataDsaGetEvp</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
#define             <link linkend="xmlSecOpenSSLTransformDsaSha1Id">xmlSecOpenSSLTransformDsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformDsaSha1GetKlass">xmlSecOpenSSLTransformDsaSha1GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformDsaSha256Id">xmlSecOpenSSLTransformDsaSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformDsaSha256GetKlass">xmlSecOpenSSLTransformDsaSha256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataEcdsaId">xmlSecOpenSSLKeyDataEcdsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataEcdsaGetKlass">xmlSecOpenSSLKeyDataEcdsaGetKlass</link>   (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa">xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa</link> (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EC-KEY--CAPS">EC_KEY</link> *ecdsa);
<link linkend="EC-KEY--CAPS">EC_KEY</link>*             <link linkend="xmlSecOpenSSLKeyDataEcdsaGetEcdsa">xmlSecOpenSSLKeyDataEcdsaGetEcdsa</link>   (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataEcdsaAdoptEvp">xmlSecOpenSSLKeyDataEcdsaAdoptEvp</link>   (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);
<link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           <link linkend="xmlSecOpenSSLKeyDataEcdsaGetEvp">xmlSecOpenSSLKeyDataEcdsaGetEvp</link>     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
#define             <link linkend="xmlSecOpenSSLTransformEcdsaSha1Id">xmlSecOpenSSLTransformEcdsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformEcdsaSha1GetKlass">xmlSecOpenSSLTransformEcdsaSha1GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformEcdsaSha224Id">xmlSecOpenSSLTransformEcdsaSha224Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformEcdsaSha224GetKlass">xmlSecOpenSSLTransformEcdsaSha224GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformEcdsaSha256Id">xmlSecOpenSSLTransformEcdsaSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformEcdsaSha256GetKlass">xmlSecOpenSSLTransformEcdsaSha256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformEcdsaSha384Id">xmlSecOpenSSLTransformEcdsaSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformEcdsaSha384GetKlass">xmlSecOpenSSLTransformEcdsaSha384GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformEcdsaSha512Id">xmlSecOpenSSLTransformEcdsaSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformEcdsaSha512GetKlass">xmlSecOpenSSLTransformEcdsaSha512GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataGost2001Id">xmlSecOpenSSLKeyDataGost2001Id</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataGost2001GetKlass">xmlSecOpenSSLKeyDataGost2001GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformGost2001GostR3411-94Id">xmlSecOpenSSLTransformGost2001GostR3411_94Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformGost2001GostR3411-94GetKlass">xmlSecOpenSSLTransformGost2001GostR3411_94GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformGostR3411-94Id">xmlSecOpenSSLTransformGostR3411_94Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformGostR3411-94GetKlass">xmlSecOpenSSLTransformGostR3411_94GetKlass</link>
                                                        (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLHmacGetMinOutputLength">xmlSecOpenSSLHmacGetMinOutputLength</link> (void);
<link linkend="void">void</link>                <link linkend="xmlSecOpenSSLHmacSetMinOutputLength">xmlSecOpenSSLHmacSetMinOutputLength</link> (<link linkend="int">int</link> min_length);
#define             <link linkend="xmlSecOpenSSLKeyDataHmacId">xmlSecOpenSSLKeyDataHmacId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataHmacGetKlass">xmlSecOpenSSLKeyDataHmacGetKlass</link>    (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataHmacSet">xmlSecOpenSSLKeyDataHmacSet</link>         (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define             <link linkend="xmlSecOpenSSLTransformHmacMd5Id">xmlSecOpenSSLTransformHmacMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacMd5GetKlass">xmlSecOpenSSLTransformHmacMd5GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacRipemd160Id">xmlSecOpenSSLTransformHmacRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacRipemd160GetKlass">xmlSecOpenSSLTransformHmacRipemd160GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacSha1Id">xmlSecOpenSSLTransformHmacSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacSha1GetKlass">xmlSecOpenSSLTransformHmacSha1GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacSha224Id">xmlSecOpenSSLTransformHmacSha224Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacSha224GetKlass">xmlSecOpenSSLTransformHmacSha224GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacSha256Id">xmlSecOpenSSLTransformHmacSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacSha256GetKlass">xmlSecOpenSSLTransformHmacSha256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacSha384Id">xmlSecOpenSSLTransformHmacSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacSha384GetKlass">xmlSecOpenSSLTransformHmacSha384GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformHmacSha512Id">xmlSecOpenSSLTransformHmacSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformHmacSha512GetKlass">xmlSecOpenSSLTransformHmacSha512GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformMd5Id">xmlSecOpenSSLTransformMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformMd5GetKlass">xmlSecOpenSSLTransformMd5GetKlass</link>   (void);
#define             <link linkend="xmlSecOpenSSLTransformRipemd160Id">xmlSecOpenSSLTransformRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRipemd160GetKlass">xmlSecOpenSSLTransformRipemd160GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLKeyDataRsaId">xmlSecOpenSSLKeyDataRsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     <link linkend="xmlSecOpenSSLKeyDataRsaGetKlass">xmlSecOpenSSLKeyDataRsaGetKlass</link>     (void);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataRsaAdoptRsa">xmlSecOpenSSLKeyDataRsaAdoptRsa</link>     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="RSA--CAPS">RSA</link> *rsa);
<link linkend="RSA--CAPS">RSA</link>*                <link linkend="xmlSecOpenSSLKeyDataRsaGetRsa">xmlSecOpenSSLKeyDataRsaGetRsa</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
<link linkend="int">int</link>                 <link linkend="xmlSecOpenSSLKeyDataRsaAdoptEvp">xmlSecOpenSSLKeyDataRsaAdoptEvp</link>     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);
<link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           <link linkend="xmlSecOpenSSLKeyDataRsaGetEvp">xmlSecOpenSSLKeyDataRsaGetEvp</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
#define             <link linkend="xmlSecOpenSSLTransformRsaMd5Id">xmlSecOpenSSLTransformRsaMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaMd5GetKlass">xmlSecOpenSSLTransformRsaMd5GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaRipemd160Id">xmlSecOpenSSLTransformRsaRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaRipemd160GetKlass">xmlSecOpenSSLTransformRsaRipemd160GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaSha1Id">xmlSecOpenSSLTransformRsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaSha1GetKlass">xmlSecOpenSSLTransformRsaSha1GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaSha224Id">xmlSecOpenSSLTransformRsaSha224Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaSha224GetKlass">xmlSecOpenSSLTransformRsaSha224GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaSha256Id">xmlSecOpenSSLTransformRsaSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaSha256GetKlass">xmlSecOpenSSLTransformRsaSha256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaSha384Id">xmlSecOpenSSLTransformRsaSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaSha384GetKlass">xmlSecOpenSSLTransformRsaSha384GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaSha512Id">xmlSecOpenSSLTransformRsaSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaSha512GetKlass">xmlSecOpenSSLTransformRsaSha512GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaPkcs1Id">xmlSecOpenSSLTransformRsaPkcs1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaPkcs1GetKlass">xmlSecOpenSSLTransformRsaPkcs1GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformRsaOaepId">xmlSecOpenSSLTransformRsaOaepId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformRsaOaepGetKlass">xmlSecOpenSSLTransformRsaOaepGetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformSha1Id">xmlSecOpenSSLTransformSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformSha1GetKlass">xmlSecOpenSSLTransformSha1GetKlass</link>  (void);
#define             <link linkend="xmlSecOpenSSLTransformSha224Id">xmlSecOpenSSLTransformSha224Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformSha224GetKlass">xmlSecOpenSSLTransformSha224GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformSha256Id">xmlSecOpenSSLTransformSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformSha256GetKlass">xmlSecOpenSSLTransformSha256GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformSha384Id">xmlSecOpenSSLTransformSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformSha384GetKlass">xmlSecOpenSSLTransformSha384GetKlass</link>
                                                        (void);
#define             <link linkend="xmlSecOpenSSLTransformSha512Id">xmlSecOpenSSLTransformSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link>   <link linkend="xmlSecOpenSSLTransformSha512GetKlass">xmlSecOpenSSLTransformSha512GetKlass</link>
                                                        (void);
#define             <link linkend="XMLSEC-OPENSSL-ERRORS-LIB--CAPS">XMLSEC_OPENSSL_ERRORS_LIB</link>
#define             <link linkend="XMLSEC-OPENSSL-ERRORS-FUNCTION--CAPS">XMLSEC_OPENSSL_ERRORS_FUNCTION</link>
<link linkend="void">void</link>                <link linkend="xmlSecOpenSSLErrorsDefaultCallback">xmlSecOpenSSLErrorsDefaultCallback</link>  (const <link linkend="char">char</link> *file,
                                                         <link linkend="int">int</link> line,
                                                         const <link linkend="char">char</link> *func,
                                                         const <link linkend="char">char</link> *errorObject,
                                                         const <link linkend="char">char</link> *errorSubject,
                                                         <link linkend="int">int</link> reason,
                                                         const <link linkend="char">char</link> *msg);
</synopsis>
</refsynopsisdiv>









<refsect1 id="xmlsec-openssl-crypto.description" role="desc">
<title role="desc.title">Description</title>
<para>
Crypto transforms implementation for OpenSSL.
</para>
</refsect1>

<refsect1 id="xmlsec-openssl-crypto.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="xmlSecCryptoGetFunctions-openssl" role="function">
<title>xmlSecCryptoGetFunctions_openssl ()</title>
<indexterm zone="xmlSecCryptoGetFunctions-openssl"><primary sortas="xmlSecCryptoGetFunctions_openssl">xmlSecCryptoGetFunctions_openssl</primary></indexterm><programlisting><link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link>  xmlSecCryptoGetFunctions_openssl
                                                        (void);</programlisting>
<para>
Gets the pointer to xmlsec-openssl functions table.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the xmlsec-openssl functions table or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLInit" role="function">
<title>xmlSecOpenSSLInit ()</title>
<indexterm zone="xmlSecOpenSSLInit"><primary sortas="xmlSecOpenSSLInit">xmlSecOpenSSLInit</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLInit                   (void);</programlisting>
<para>
XMLSec library specific crypto engine initialization.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLShutdown" role="function">
<title>xmlSecOpenSSLShutdown ()</title>
<indexterm zone="xmlSecOpenSSLShutdown"><primary sortas="xmlSecOpenSSLShutdown">xmlSecOpenSSLShutdown</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLShutdown               (void);</programlisting>
<para>
XMLSec library specific crypto engine shutdown.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeysMngrInit" role="function">
<title>xmlSecOpenSSLKeysMngrInit ()</title>
<indexterm zone="xmlSecOpenSSLKeysMngrInit"><primary sortas="xmlSecOpenSSLKeysMngrInit">xmlSecOpenSSLKeysMngrInit</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeysMngrInit           (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);</programlisting>
<para>
Adds OpenSSL specific key data stores in keys manager.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>               the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLGenerateRandom" role="function">
<title>xmlSecOpenSSLGenerateRandom ()</title>
<indexterm zone="xmlSecOpenSSLGenerateRandom"><primary sortas="xmlSecOpenSSLGenerateRandom">xmlSecOpenSSLGenerateRandom</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLGenerateRandom         (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> size);</programlisting>
<para>
Generates <parameter>size</parameter> random bytes and puts result in <parameter>buffer</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&#160;:</term>
<listitem><simpara>             the destination buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>               the numer of bytes to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLSetDefaultTrustedCertsFolder" role="function">
<title>xmlSecOpenSSLSetDefaultTrustedCertsFolder ()</title>
<indexterm zone="xmlSecOpenSSLSetDefaultTrustedCertsFolder"><primary sortas="xmlSecOpenSSLSetDefaultTrustedCertsFolder">xmlSecOpenSSLSetDefaultTrustedCertsFolder</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLSetDefaultTrustedCertsFolder
                                                        (const <link linkend="xmlChar">xmlChar</link> *path);</programlisting>
<para>
Sets the default trusted certs folder.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara>       the default trusted certs path.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLGetDefaultTrustedCertsFolder" role="function">
<title>xmlSecOpenSSLGetDefaultTrustedCertsFolder ()</title>
<indexterm zone="xmlSecOpenSSLGetDefaultTrustedCertsFolder"><primary sortas="xmlSecOpenSSLGetDefaultTrustedCertsFolder">xmlSecOpenSSLGetDefaultTrustedCertsFolder</primary></indexterm><programlisting>const <link linkend="xmlChar">xmlChar</link>*      xmlSecOpenSSLGetDefaultTrustedCertsFolder
                                                        (void);</programlisting>
<para>
Gets the default trusted certs folder.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the default trusted cert folder.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataAesId" role="macro">
<title>xmlSecOpenSSLKeyDataAesId</title>
<indexterm zone="xmlSecOpenSSLKeyDataAesId"><primary sortas="xmlSecOpenSSLKeyDataAesId">xmlSecOpenSSLKeyDataAesId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataAesId</programlisting>
<para>
The AES key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataAesGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataAesGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataAesGetKlass"><primary sortas="xmlSecOpenSSLKeyDataAesGetKlass">xmlSecOpenSSLKeyDataAesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataAesGetKlass     (void);</programlisting>
<para>
The AES key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataAesSet" role="function">
<title>xmlSecOpenSSLKeyDataAesSet ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataAesSet"><primary sortas="xmlSecOpenSSLKeyDataAesSet">xmlSecOpenSSLKeyDataAesSet</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataAesSet          (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of AES key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to AES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes128CbcId" role="macro">
<title>xmlSecOpenSSLTransformAes128CbcId</title>
<indexterm zone="xmlSecOpenSSLTransformAes128CbcId"><primary sortas="xmlSecOpenSSLTransformAes128CbcId">xmlSecOpenSSLTransformAes128CbcId</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformAes128CbcId</programlisting>
<para>
The AES128 CBC cipher transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes128CbcGetKlass" role="function">
<title>xmlSecOpenSSLTransformAes128CbcGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformAes128CbcGetKlass"><primary sortas="xmlSecOpenSSLTransformAes128CbcGetKlass">xmlSecOpenSSLTransformAes128CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformAes128CbcGetKlass
                                                        (void);</programlisting>
<para>
AES 128 CBC encryption transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 128 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes192CbcId" role="macro">
<title>xmlSecOpenSSLTransformAes192CbcId</title>
<indexterm zone="xmlSecOpenSSLTransformAes192CbcId"><primary sortas="xmlSecOpenSSLTransformAes192CbcId">xmlSecOpenSSLTransformAes192CbcId</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformAes192CbcId</programlisting>
<para>
The AES192 CBC cipher transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes192CbcGetKlass" role="function">
<title>xmlSecOpenSSLTransformAes192CbcGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformAes192CbcGetKlass"><primary sortas="xmlSecOpenSSLTransformAes192CbcGetKlass">xmlSecOpenSSLTransformAes192CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformAes192CbcGetKlass
                                                        (void);</programlisting>
<para>
AES 192 CBC encryption transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 192 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes256CbcId" role="macro">
<title>xmlSecOpenSSLTransformAes256CbcId</title>
<indexterm zone="xmlSecOpenSSLTransformAes256CbcId"><primary sortas="xmlSecOpenSSLTransformAes256CbcId">xmlSecOpenSSLTransformAes256CbcId</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformAes256CbcId</programlisting>
<para>
The AES256 CBC cipher transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformAes256CbcGetKlass" role="function">
<title>xmlSecOpenSSLTransformAes256CbcGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformAes256CbcGetKlass"><primary sortas="xmlSecOpenSSLTransformAes256CbcGetKlass">xmlSecOpenSSLTransformAes256CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformAes256CbcGetKlass
                                                        (void);</programlisting>
<para>
AES 256 CBC encryption transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 256 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes128Id" role="macro">
<title>xmlSecOpenSSLTransformKWAes128Id</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes128Id"><primary sortas="xmlSecOpenSSLTransformKWAes128Id">xmlSecOpenSSLTransformKWAes128Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformKWAes128Id</programlisting>
<para>
The AES 128 key wrap transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes128GetKlass" role="function">
<title>xmlSecOpenSSLTransformKWAes128GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes128GetKlass"><primary sortas="xmlSecOpenSSLTransformKWAes128GetKlass">xmlSecOpenSSLTransformKWAes128GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformKWAes128GetKlass
                                                        (void);</programlisting>
<para>
The AES-128 kew wrapper transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-128 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes192Id" role="macro">
<title>xmlSecOpenSSLTransformKWAes192Id</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes192Id"><primary sortas="xmlSecOpenSSLTransformKWAes192Id">xmlSecOpenSSLTransformKWAes192Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformKWAes192Id</programlisting>
<para>
The AES 192 key wrap transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes192GetKlass" role="function">
<title>xmlSecOpenSSLTransformKWAes192GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes192GetKlass"><primary sortas="xmlSecOpenSSLTransformKWAes192GetKlass">xmlSecOpenSSLTransformKWAes192GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformKWAes192GetKlass
                                                        (void);</programlisting>
<para>
The AES-192 kew wrapper transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-192 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes256Id" role="macro">
<title>xmlSecOpenSSLTransformKWAes256Id</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes256Id"><primary sortas="xmlSecOpenSSLTransformKWAes256Id">xmlSecOpenSSLTransformKWAes256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformKWAes256Id</programlisting>
<para>
The AES 256 key wrap transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWAes256GetKlass" role="function">
<title>xmlSecOpenSSLTransformKWAes256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformKWAes256GetKlass"><primary sortas="xmlSecOpenSSLTransformKWAes256GetKlass">xmlSecOpenSSLTransformKWAes256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformKWAes256GetKlass
                                                        (void);</programlisting>
<para>
The AES-256 kew wrapper transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-256 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDesId" role="macro">
<title>xmlSecOpenSSLKeyDataDesId</title>
<indexterm zone="xmlSecOpenSSLKeyDataDesId"><primary sortas="xmlSecOpenSSLKeyDataDesId">xmlSecOpenSSLKeyDataDesId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataDesId</programlisting>
<para>
The DES key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDesGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataDesGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDesGetKlass"><primary sortas="xmlSecOpenSSLKeyDataDesGetKlass">xmlSecOpenSSLKeyDataDesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataDesGetKlass     (void);</programlisting>
<para>
The DES key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDesSet" role="function">
<title>xmlSecOpenSSLKeyDataDesSet ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDesSet"><primary sortas="xmlSecOpenSSLKeyDataDesSet">xmlSecOpenSSLKeyDataDesSet</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataDesSet          (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of DES key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to DES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDes3CbcId" role="macro">
<title>xmlSecOpenSSLTransformDes3CbcId</title>
<indexterm zone="xmlSecOpenSSLTransformDes3CbcId"><primary sortas="xmlSecOpenSSLTransformDes3CbcId">xmlSecOpenSSLTransformDes3CbcId</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformDes3CbcId</programlisting>
<para>
The DES3 CBC cipher transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDes3CbcGetKlass" role="function">
<title>xmlSecOpenSSLTransformDes3CbcGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformDes3CbcGetKlass"><primary sortas="xmlSecOpenSSLTransformDes3CbcGetKlass">xmlSecOpenSSLTransformDes3CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformDes3CbcGetKlass
                                                        (void);</programlisting>
<para>
Triple DES CBC encryption transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to Triple DES encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWDes3Id" role="macro">
<title>xmlSecOpenSSLTransformKWDes3Id</title>
<indexterm zone="xmlSecOpenSSLTransformKWDes3Id"><primary sortas="xmlSecOpenSSLTransformKWDes3Id">xmlSecOpenSSLTransformKWDes3Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformKWDes3Id</programlisting>
<para>
The DES3 KW transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformKWDes3GetKlass" role="function">
<title>xmlSecOpenSSLTransformKWDes3GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformKWDes3GetKlass"><primary sortas="xmlSecOpenSSLTransformKWDes3GetKlass">xmlSecOpenSSLTransformKWDes3GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformKWDes3GetKlass
                                                        (void);</programlisting>
<para>
The Triple DES key wrapper transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Triple DES key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaId" role="macro">
<title>xmlSecOpenSSLKeyDataDsaId</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaId"><primary sortas="xmlSecOpenSSLKeyDataDsaId">xmlSecOpenSSLKeyDataDsaId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataDsaId</programlisting>
<para>
The DSA key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataDsaGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaGetKlass"><primary sortas="xmlSecOpenSSLKeyDataDsaGetKlass">xmlSecOpenSSLKeyDataDsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataDsaGetKlass     (void);</programlisting>
<para>
The DSA key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to DSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaAdoptDsa" role="function">
<title>xmlSecOpenSSLKeyDataDsaAdoptDsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaAdoptDsa"><primary sortas="xmlSecOpenSSLKeyDataDsaAdoptDsa">xmlSecOpenSSLKeyDataDsaAdoptDsa</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataDsaAdoptDsa     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="DSA--CAPS">DSA</link> *dsa);</programlisting>
<para>
Sets the value of DSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dsa</parameter>&#160;:</term>
<listitem><simpara>                the pointer to OpenSSL DSA key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaGetDsa" role="function">
<title>xmlSecOpenSSLKeyDataDsaGetDsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaGetDsa"><primary sortas="xmlSecOpenSSLKeyDataDsaGetDsa">xmlSecOpenSSLKeyDataDsaGetDsa</primary></indexterm><programlisting><link linkend="DSA--CAPS">DSA</link>*                xmlSecOpenSSLKeyDataDsaGetDsa       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL DSA key from DSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL DSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaAdoptEvp" role="function">
<title>xmlSecOpenSSLKeyDataDsaAdoptEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaAdoptEvp"><primary sortas="xmlSecOpenSSLKeyDataDsaAdoptEvp">xmlSecOpenSSLKeyDataDsaAdoptEvp</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataDsaAdoptEvp     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);</programlisting>
<para>
Sets the DSA key data value to OpenSSL EVP key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pKey</parameter>&#160;:</term>
<listitem><simpara>               the pointer to OpenSSL EVP key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataDsaGetEvp" role="function">
<title>xmlSecOpenSSLKeyDataDsaGetEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataDsaGetEvp"><primary sortas="xmlSecOpenSSLKeyDataDsaGetEvp">xmlSecOpenSSLKeyDataDsaGetEvp</primary></indexterm><programlisting><link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           xmlSecOpenSSLKeyDataDsaGetEvp       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL EVP key from DSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL EVP key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDsaSha1Id" role="macro">
<title>xmlSecOpenSSLTransformDsaSha1Id</title>
<indexterm zone="xmlSecOpenSSLTransformDsaSha1Id"><primary sortas="xmlSecOpenSSLTransformDsaSha1Id">xmlSecOpenSSLTransformDsaSha1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformDsaSha1Id</programlisting>
<para>
The DSA SHA1 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDsaSha1GetKlass" role="function">
<title>xmlSecOpenSSLTransformDsaSha1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformDsaSha1GetKlass"><primary sortas="xmlSecOpenSSLTransformDsaSha1GetKlass">xmlSecOpenSSLTransformDsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformDsaSha1GetKlass
                                                        (void);</programlisting>
<para>
The DSA-SHA1 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDsaSha256Id" role="macro">
<title>xmlSecOpenSSLTransformDsaSha256Id</title>
<indexterm zone="xmlSecOpenSSLTransformDsaSha256Id"><primary sortas="xmlSecOpenSSLTransformDsaSha256Id">xmlSecOpenSSLTransformDsaSha256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformDsaSha256Id</programlisting>
<para>
The DSA SHA256 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformDsaSha256GetKlass" role="function">
<title>xmlSecOpenSSLTransformDsaSha256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformDsaSha256GetKlass"><primary sortas="xmlSecOpenSSLTransformDsaSha256GetKlass">xmlSecOpenSSLTransformDsaSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformDsaSha256GetKlass
                                                        (void);</programlisting>
<para>
The DSA-SHA256 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaId" role="macro">
<title>xmlSecOpenSSLKeyDataEcdsaId</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaId"><primary sortas="xmlSecOpenSSLKeyDataEcdsaId">xmlSecOpenSSLKeyDataEcdsaId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataEcdsaId</programlisting>
<para>
The ECDSA key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataEcdsaGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaGetKlass"><primary sortas="xmlSecOpenSSLKeyDataEcdsaGetKlass">xmlSecOpenSSLKeyDataEcdsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataEcdsaGetKlass   (void);</programlisting>
<para>
The ECDSA key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to ECDSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa" role="function">
<title>xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa"><primary sortas="xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa">xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataEcdsaAdoptEcdsa (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EC-KEY--CAPS">EC_KEY</link> *ecdsa);</programlisting>
<para>
Sets the value of ECDSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to ECDSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ecdsa</parameter>&#160;:</term>
<listitem><simpara>              the pointer to OpenSSL ECDSA key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaGetEcdsa" role="function">
<title>xmlSecOpenSSLKeyDataEcdsaGetEcdsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaGetEcdsa"><primary sortas="xmlSecOpenSSLKeyDataEcdsaGetEcdsa">xmlSecOpenSSLKeyDataEcdsaGetEcdsa</primary></indexterm><programlisting><link linkend="EC-KEY--CAPS">EC_KEY</link>*             xmlSecOpenSSLKeyDataEcdsaGetEcdsa   (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL ECDSA key from ECDSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to ECDSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL ECDSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaAdoptEvp" role="function">
<title>xmlSecOpenSSLKeyDataEcdsaAdoptEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaAdoptEvp"><primary sortas="xmlSecOpenSSLKeyDataEcdsaAdoptEvp">xmlSecOpenSSLKeyDataEcdsaAdoptEvp</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataEcdsaAdoptEvp   (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);</programlisting>
<para>
Sets the ECDSA key data value to OpenSSL EVP key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to ECDSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pKey</parameter>&#160;:</term>
<listitem><simpara>               the pointer to OpenSSL EVP key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataEcdsaGetEvp" role="function">
<title>xmlSecOpenSSLKeyDataEcdsaGetEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataEcdsaGetEvp"><primary sortas="xmlSecOpenSSLKeyDataEcdsaGetEvp">xmlSecOpenSSLKeyDataEcdsaGetEvp</primary></indexterm><programlisting><link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           xmlSecOpenSSLKeyDataEcdsaGetEvp     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL EVP key from ECDSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to ECDSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL EVP key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha1Id" role="macro">
<title>xmlSecOpenSSLTransformEcdsaSha1Id</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha1Id"><primary sortas="xmlSecOpenSSLTransformEcdsaSha1Id">xmlSecOpenSSLTransformEcdsaSha1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformEcdsaSha1Id</programlisting>
<para>
The ECDSA-SHA1 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha1GetKlass" role="function">
<title>xmlSecOpenSSLTransformEcdsaSha1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha1GetKlass"><primary sortas="xmlSecOpenSSLTransformEcdsaSha1GetKlass">xmlSecOpenSSLTransformEcdsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformEcdsaSha1GetKlass
                                                        (void);</programlisting>
<para>
The ECDSA-SHA1 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> ECDSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha224Id" role="macro">
<title>xmlSecOpenSSLTransformEcdsaSha224Id</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha224Id"><primary sortas="xmlSecOpenSSLTransformEcdsaSha224Id">xmlSecOpenSSLTransformEcdsaSha224Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformEcdsaSha224Id</programlisting>
<para>
The ECDSA-SHA224 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha224GetKlass" role="function">
<title>xmlSecOpenSSLTransformEcdsaSha224GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha224GetKlass"><primary sortas="xmlSecOpenSSLTransformEcdsaSha224GetKlass">xmlSecOpenSSLTransformEcdsaSha224GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformEcdsaSha224GetKlass
                                                        (void);</programlisting>
<para>
The ECDSA-SHA224 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> ECDSA-SHA224 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha256Id" role="macro">
<title>xmlSecOpenSSLTransformEcdsaSha256Id</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha256Id"><primary sortas="xmlSecOpenSSLTransformEcdsaSha256Id">xmlSecOpenSSLTransformEcdsaSha256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformEcdsaSha256Id</programlisting>
<para>
The ECDSA-SHA256 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha256GetKlass" role="function">
<title>xmlSecOpenSSLTransformEcdsaSha256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha256GetKlass"><primary sortas="xmlSecOpenSSLTransformEcdsaSha256GetKlass">xmlSecOpenSSLTransformEcdsaSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformEcdsaSha256GetKlass
                                                        (void);</programlisting>
<para>
The ECDSA-SHA256 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> ECDSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha384Id" role="macro">
<title>xmlSecOpenSSLTransformEcdsaSha384Id</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha384Id"><primary sortas="xmlSecOpenSSLTransformEcdsaSha384Id">xmlSecOpenSSLTransformEcdsaSha384Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformEcdsaSha384Id</programlisting>
<para>
The ECDSA-SHA384 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha384GetKlass" role="function">
<title>xmlSecOpenSSLTransformEcdsaSha384GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha384GetKlass"><primary sortas="xmlSecOpenSSLTransformEcdsaSha384GetKlass">xmlSecOpenSSLTransformEcdsaSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformEcdsaSha384GetKlass
                                                        (void);</programlisting>
<para>
The ECDSA-SHA384 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> ECDSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha512Id" role="macro">
<title>xmlSecOpenSSLTransformEcdsaSha512Id</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha512Id"><primary sortas="xmlSecOpenSSLTransformEcdsaSha512Id">xmlSecOpenSSLTransformEcdsaSha512Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformEcdsaSha512Id</programlisting>
<para>
The ECDSA-SHA512 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformEcdsaSha512GetKlass" role="function">
<title>xmlSecOpenSSLTransformEcdsaSha512GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformEcdsaSha512GetKlass"><primary sortas="xmlSecOpenSSLTransformEcdsaSha512GetKlass">xmlSecOpenSSLTransformEcdsaSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformEcdsaSha512GetKlass
                                                        (void);</programlisting>
<para>
The ECDSA-SHA512 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> ECDSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataGost2001Id" role="macro">
<title>xmlSecOpenSSLKeyDataGost2001Id</title>
<indexterm zone="xmlSecOpenSSLKeyDataGost2001Id"><primary sortas="xmlSecOpenSSLKeyDataGost2001Id">xmlSecOpenSSLKeyDataGost2001Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataGost2001Id</programlisting>
<para>
The GOST2001 key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataGost2001GetKlass" role="function">
<title>xmlSecOpenSSLKeyDataGost2001GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataGost2001GetKlass"><primary sortas="xmlSecOpenSSLKeyDataGost2001GetKlass">xmlSecOpenSSLKeyDataGost2001GetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataGost2001GetKlass
                                                        (void);</programlisting>
<para>
The GOST2001 key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to GOST2001 key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformGost2001GostR3411-94Id" role="macro">
<title>xmlSecOpenSSLTransformGost2001GostR3411_94Id</title>
<indexterm zone="xmlSecOpenSSLTransformGost2001GostR3411-94Id"><primary sortas="xmlSecOpenSSLTransformGost2001GostR3411_94Id">xmlSecOpenSSLTransformGost2001GostR3411_94Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformGost2001GostR3411_94Id</programlisting>
<para>
The GOST2001 GOSTR3411_94 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformGost2001GostR3411-94GetKlass" role="function">
<title>xmlSecOpenSSLTransformGost2001GostR3411_94GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformGost2001GostR3411-94GetKlass"><primary sortas="xmlSecOpenSSLTransformGost2001GostR3411_94GetKlass">xmlSecOpenSSLTransformGost2001GostR3411_94GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformGost2001GostR3411_94GetKlass
                                                        (void);</programlisting>
<para>
The GOST2001-GOSTR3411_94 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> GOST2001-GOSTR3411_94 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformGostR3411-94Id" role="macro">
<title>xmlSecOpenSSLTransformGostR3411_94Id</title>
<indexterm zone="xmlSecOpenSSLTransformGostR3411-94Id"><primary sortas="xmlSecOpenSSLTransformGostR3411_94Id">xmlSecOpenSSLTransformGostR3411_94Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformGostR3411_94Id</programlisting>
<para>
The GOSTR3411_94 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformGostR3411-94GetKlass" role="function">
<title>xmlSecOpenSSLTransformGostR3411_94GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformGostR3411-94GetKlass"><primary sortas="xmlSecOpenSSLTransformGostR3411_94GetKlass">xmlSecOpenSSLTransformGostR3411_94GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformGostR3411_94GetKlass
                                                        (void);</programlisting>
<para>
GOSTR3411_94 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to GOSTR3411_94 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLHmacGetMinOutputLength" role="function">
<title>xmlSecOpenSSLHmacGetMinOutputLength ()</title>
<indexterm zone="xmlSecOpenSSLHmacGetMinOutputLength"><primary sortas="xmlSecOpenSSLHmacGetMinOutputLength">xmlSecOpenSSLHmacGetMinOutputLength</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLHmacGetMinOutputLength (void);</programlisting>
<para>
Gets the value of min HMAC length.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the min HMAC output length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLHmacSetMinOutputLength" role="function">
<title>xmlSecOpenSSLHmacSetMinOutputLength ()</title>
<indexterm zone="xmlSecOpenSSLHmacSetMinOutputLength"><primary sortas="xmlSecOpenSSLHmacSetMinOutputLength">xmlSecOpenSSLHmacSetMinOutputLength</primary></indexterm><programlisting><link linkend="void">void</link>                xmlSecOpenSSLHmacSetMinOutputLength (<link linkend="int">int</link> min_length);</programlisting>
<para>
Sets the min HMAC output length</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>min_length</parameter>&#160;:</term>
<listitem><simpara> the new min length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataHmacId" role="macro">
<title>xmlSecOpenSSLKeyDataHmacId</title>
<indexterm zone="xmlSecOpenSSLKeyDataHmacId"><primary sortas="xmlSecOpenSSLKeyDataHmacId">xmlSecOpenSSLKeyDataHmacId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataHmacId</programlisting>
<para>
The DHMAC key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataHmacGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataHmacGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataHmacGetKlass"><primary sortas="xmlSecOpenSSLKeyDataHmacGetKlass">xmlSecOpenSSLKeyDataHmacGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataHmacGetKlass    (void);</programlisting>
<para>
The HMAC key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> HMAC key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataHmacSet" role="function">
<title>xmlSecOpenSSLKeyDataHmacSet ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataHmacSet"><primary sortas="xmlSecOpenSSLKeyDataHmacSet">xmlSecOpenSSLKeyDataHmacSet</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataHmacSet         (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                                         <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of HMAC key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to HMAC key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacMd5Id" role="macro">
<title>xmlSecOpenSSLTransformHmacMd5Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacMd5Id"><primary sortas="xmlSecOpenSSLTransformHmacMd5Id">xmlSecOpenSSLTransformHmacMd5Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacMd5Id</programlisting>
<para>
The HMAC with MD5 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacMd5GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacMd5GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacMd5GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacMd5GetKlass">xmlSecOpenSSLTransformHmacMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacMd5GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-MD5 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-MD5 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacRipemd160Id" role="macro">
<title>xmlSecOpenSSLTransformHmacRipemd160Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacRipemd160Id"><primary sortas="xmlSecOpenSSLTransformHmacRipemd160Id">xmlSecOpenSSLTransformHmacRipemd160Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacRipemd160Id</programlisting>
<para>
The HMAC with RipeMD160 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacRipemd160GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacRipemd160GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacRipemd160GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacRipemd160GetKlass">xmlSecOpenSSLTransformHmacRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacRipemd160GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-RIPEMD160 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-RIPEMD160 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha1Id" role="macro">
<title>xmlSecOpenSSLTransformHmacSha1Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha1Id"><primary sortas="xmlSecOpenSSLTransformHmacSha1Id">xmlSecOpenSSLTransformHmacSha1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha1GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacSha1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha1GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacSha1GetKlass">xmlSecOpenSSLTransformHmacSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacSha1GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-SHA1 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA1 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha224Id" role="macro">
<title>xmlSecOpenSSLTransformHmacSha224Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha224Id"><primary sortas="xmlSecOpenSSLTransformHmacSha224Id">xmlSecOpenSSLTransformHmacSha224Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacSha224Id</programlisting>
<para>
The HMAC with SHA224 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha224GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacSha224GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha224GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacSha224GetKlass">xmlSecOpenSSLTransformHmacSha224GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacSha224GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-SHA224 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA224 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha256Id" role="macro">
<title>xmlSecOpenSSLTransformHmacSha256Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha256Id"><primary sortas="xmlSecOpenSSLTransformHmacSha256Id">xmlSecOpenSSLTransformHmacSha256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha256GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacSha256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha256GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacSha256GetKlass">xmlSecOpenSSLTransformHmacSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacSha256GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-SHA256 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA256 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha384Id" role="macro">
<title>xmlSecOpenSSLTransformHmacSha384Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha384Id"><primary sortas="xmlSecOpenSSLTransformHmacSha384Id">xmlSecOpenSSLTransformHmacSha384Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha384GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacSha384GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha384GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacSha384GetKlass">xmlSecOpenSSLTransformHmacSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacSha384GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-SHA384 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA384 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha512Id" role="macro">
<title>xmlSecOpenSSLTransformHmacSha512Id</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha512Id"><primary sortas="xmlSecOpenSSLTransformHmacSha512Id">xmlSecOpenSSLTransformHmacSha512Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformHmacSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformHmacSha512GetKlass" role="function">
<title>xmlSecOpenSSLTransformHmacSha512GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformHmacSha512GetKlass"><primary sortas="xmlSecOpenSSLTransformHmacSha512GetKlass">xmlSecOpenSSLTransformHmacSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformHmacSha512GetKlass
                                                        (void);</programlisting>
<para>
The HMAC-SHA512 transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA512 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformMd5Id" role="macro">
<title>xmlSecOpenSSLTransformMd5Id</title>
<indexterm zone="xmlSecOpenSSLTransformMd5Id"><primary sortas="xmlSecOpenSSLTransformMd5Id">xmlSecOpenSSLTransformMd5Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformMd5Id</programlisting>
<para>
The MD5 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformMd5GetKlass" role="function">
<title>xmlSecOpenSSLTransformMd5GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformMd5GetKlass"><primary sortas="xmlSecOpenSSLTransformMd5GetKlass">xmlSecOpenSSLTransformMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformMd5GetKlass   (void);</programlisting>
<para>
MD5 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to MD5 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRipemd160Id" role="macro">
<title>xmlSecOpenSSLTransformRipemd160Id</title>
<indexterm zone="xmlSecOpenSSLTransformRipemd160Id"><primary sortas="xmlSecOpenSSLTransformRipemd160Id">xmlSecOpenSSLTransformRipemd160Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRipemd160Id</programlisting>
<para>
The RIPEMD160 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRipemd160GetKlass" role="function">
<title>xmlSecOpenSSLTransformRipemd160GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRipemd160GetKlass"><primary sortas="xmlSecOpenSSLTransformRipemd160GetKlass">xmlSecOpenSSLTransformRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRipemd160GetKlass
                                                        (void);</programlisting>
<para>
RIPEMD-160 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to RIPEMD-160 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaId" role="macro">
<title>xmlSecOpenSSLKeyDataRsaId</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaId"><primary sortas="xmlSecOpenSSLKeyDataRsaId">xmlSecOpenSSLKeyDataRsaId</primary></indexterm><programlisting>#define             xmlSecOpenSSLKeyDataRsaId</programlisting>
<para>
The RSA key klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaGetKlass" role="function">
<title>xmlSecOpenSSLKeyDataRsaGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaGetKlass"><primary sortas="xmlSecOpenSSLKeyDataRsaGetKlass">xmlSecOpenSSLKeyDataRsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link>     xmlSecOpenSSLKeyDataRsaGetKlass     (void);</programlisting>
<para>
The OpenSSL RSA key data klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL RSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaAdoptRsa" role="function">
<title>xmlSecOpenSSLKeyDataRsaAdoptRsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaAdoptRsa"><primary sortas="xmlSecOpenSSLKeyDataRsaAdoptRsa">xmlSecOpenSSLKeyDataRsaAdoptRsa</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataRsaAdoptRsa     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="RSA--CAPS">RSA</link> *rsa);</programlisting>
<para>
Sets the value of RSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rsa</parameter>&#160;:</term>
<listitem><simpara>                the pointer to OpenSSL RSA key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaGetRsa" role="function">
<title>xmlSecOpenSSLKeyDataRsaGetRsa ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaGetRsa"><primary sortas="xmlSecOpenSSLKeyDataRsaGetRsa">xmlSecOpenSSLKeyDataRsaGetRsa</primary></indexterm><programlisting><link linkend="RSA--CAPS">RSA</link>*                xmlSecOpenSSLKeyDataRsaGetRsa       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL RSA key from RSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL RSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaAdoptEvp" role="function">
<title>xmlSecOpenSSLKeyDataRsaAdoptEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaAdoptEvp"><primary sortas="xmlSecOpenSSLKeyDataRsaAdoptEvp">xmlSecOpenSSLKeyDataRsaAdoptEvp</primary></indexterm><programlisting><link linkend="int">int</link>                 xmlSecOpenSSLKeyDataRsaAdoptEvp     (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                                         <link linkend="EVP-PKEY--CAPS">EVP_PKEY</link> *pKey);</programlisting>
<para>
Sets the RSA key data value to OpenSSL EVP key.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pKey</parameter>&#160;:</term>
<listitem><simpara>               the pointer to OpenSSL EVP key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLKeyDataRsaGetEvp" role="function">
<title>xmlSecOpenSSLKeyDataRsaGetEvp ()</title>
<indexterm zone="xmlSecOpenSSLKeyDataRsaGetEvp"><primary sortas="xmlSecOpenSSLKeyDataRsaGetEvp">xmlSecOpenSSLKeyDataRsaGetEvp</primary></indexterm><programlisting><link linkend="EVP-PKEY--CAPS">EVP_PKEY</link>*           xmlSecOpenSSLKeyDataRsaGetEvp       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the OpenSSL EVP key from RSA key data.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to OpenSSL EVP key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaMd5Id" role="macro">
<title>xmlSecOpenSSLTransformRsaMd5Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaMd5Id"><primary sortas="xmlSecOpenSSLTransformRsaMd5Id">xmlSecOpenSSLTransformRsaMd5Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaMd5Id</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaMd5GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaMd5GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaMd5GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaMd5GetKlass">xmlSecOpenSSLTransformRsaMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaMd5GetKlass
                                                        (void);</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-MD5 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaRipemd160Id" role="macro">
<title>xmlSecOpenSSLTransformRsaRipemd160Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaRipemd160Id"><primary sortas="xmlSecOpenSSLTransformRsaRipemd160Id">xmlSecOpenSSLTransformRsaRipemd160Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaRipemd160Id</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaRipemd160GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaRipemd160GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaRipemd160GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaRipemd160GetKlass">xmlSecOpenSSLTransformRsaRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaRipemd160GetKlass
                                                        (void);</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-RIPEMD160 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha1Id" role="macro">
<title>xmlSecOpenSSLTransformRsaSha1Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha1Id"><primary sortas="xmlSecOpenSSLTransformRsaSha1Id">xmlSecOpenSSLTransformRsaSha1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaSha1Id</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha1GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaSha1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha1GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaSha1GetKlass">xmlSecOpenSSLTransformRsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaSha1GetKlass
                                                        (void);</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha224Id" role="macro">
<title>xmlSecOpenSSLTransformRsaSha224Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha224Id"><primary sortas="xmlSecOpenSSLTransformRsaSha224Id">xmlSecOpenSSLTransformRsaSha224Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaSha224Id</programlisting>
<para>
The RSA-SHA224 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha224GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaSha224GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha224GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaSha224GetKlass">xmlSecOpenSSLTransformRsaSha224GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaSha224GetKlass
                                                        (void);</programlisting>
<para>
The RSA-SHA224 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA224 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha256Id" role="macro">
<title>xmlSecOpenSSLTransformRsaSha256Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha256Id"><primary sortas="xmlSecOpenSSLTransformRsaSha256Id">xmlSecOpenSSLTransformRsaSha256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaSha256Id</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha256GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaSha256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha256GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaSha256GetKlass">xmlSecOpenSSLTransformRsaSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaSha256GetKlass
                                                        (void);</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha384Id" role="macro">
<title>xmlSecOpenSSLTransformRsaSha384Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha384Id"><primary sortas="xmlSecOpenSSLTransformRsaSha384Id">xmlSecOpenSSLTransformRsaSha384Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaSha384Id</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha384GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaSha384GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha384GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaSha384GetKlass">xmlSecOpenSSLTransformRsaSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaSha384GetKlass
                                                        (void);</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha512Id" role="macro">
<title>xmlSecOpenSSLTransformRsaSha512Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha512Id"><primary sortas="xmlSecOpenSSLTransformRsaSha512Id">xmlSecOpenSSLTransformRsaSha512Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaSha512Id</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaSha512GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaSha512GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaSha512GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaSha512GetKlass">xmlSecOpenSSLTransformRsaSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaSha512GetKlass
                                                        (void);</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaPkcs1Id" role="macro">
<title>xmlSecOpenSSLTransformRsaPkcs1Id</title>
<indexterm zone="xmlSecOpenSSLTransformRsaPkcs1Id"><primary sortas="xmlSecOpenSSLTransformRsaPkcs1Id">xmlSecOpenSSLTransformRsaPkcs1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaPkcs1Id</programlisting>
<para>
The RSA PKCS1 key transport transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaPkcs1GetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaPkcs1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaPkcs1GetKlass"><primary sortas="xmlSecOpenSSLTransformRsaPkcs1GetKlass">xmlSecOpenSSLTransformRsaPkcs1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaPkcs1GetKlass
                                                        (void);</programlisting>
<para>
The RSA-PKCS1 key transport transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-PKCS1 key transport transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaOaepId" role="macro">
<title>xmlSecOpenSSLTransformRsaOaepId</title>
<indexterm zone="xmlSecOpenSSLTransformRsaOaepId"><primary sortas="xmlSecOpenSSLTransformRsaOaepId">xmlSecOpenSSLTransformRsaOaepId</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformRsaOaepId</programlisting>
<para>
The RSA PKCS1 key transport transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformRsaOaepGetKlass" role="function">
<title>xmlSecOpenSSLTransformRsaOaepGetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformRsaOaepGetKlass"><primary sortas="xmlSecOpenSSLTransformRsaOaepGetKlass">xmlSecOpenSSLTransformRsaOaepGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformRsaOaepGetKlass
                                                        (void);</programlisting>
<para>
The RSA-OAEP key transport transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-OAEP key transport transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha1Id" role="macro">
<title>xmlSecOpenSSLTransformSha1Id</title>
<indexterm zone="xmlSecOpenSSLTransformSha1Id"><primary sortas="xmlSecOpenSSLTransformSha1Id">xmlSecOpenSSLTransformSha1Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformSha1Id</programlisting>
<para>
The SHA1 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha1GetKlass" role="function">
<title>xmlSecOpenSSLTransformSha1GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformSha1GetKlass"><primary sortas="xmlSecOpenSSLTransformSha1GetKlass">xmlSecOpenSSLTransformSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformSha1GetKlass  (void);</programlisting>
<para>
SHA-1 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-1 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha224Id" role="macro">
<title>xmlSecOpenSSLTransformSha224Id</title>
<indexterm zone="xmlSecOpenSSLTransformSha224Id"><primary sortas="xmlSecOpenSSLTransformSha224Id">xmlSecOpenSSLTransformSha224Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformSha224Id</programlisting>
<para>
The SHA224 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha224GetKlass" role="function">
<title>xmlSecOpenSSLTransformSha224GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformSha224GetKlass"><primary sortas="xmlSecOpenSSLTransformSha224GetKlass">xmlSecOpenSSLTransformSha224GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformSha224GetKlass
                                                        (void);</programlisting>
<para>
SHA-224 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-224 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha256Id" role="macro">
<title>xmlSecOpenSSLTransformSha256Id</title>
<indexterm zone="xmlSecOpenSSLTransformSha256Id"><primary sortas="xmlSecOpenSSLTransformSha256Id">xmlSecOpenSSLTransformSha256Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformSha256Id</programlisting>
<para>
The SHA256 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha256GetKlass" role="function">
<title>xmlSecOpenSSLTransformSha256GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformSha256GetKlass"><primary sortas="xmlSecOpenSSLTransformSha256GetKlass">xmlSecOpenSSLTransformSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformSha256GetKlass
                                                        (void);</programlisting>
<para>
SHA-256 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-256 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha384Id" role="macro">
<title>xmlSecOpenSSLTransformSha384Id</title>
<indexterm zone="xmlSecOpenSSLTransformSha384Id"><primary sortas="xmlSecOpenSSLTransformSha384Id">xmlSecOpenSSLTransformSha384Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformSha384Id</programlisting>
<para>
The SHA384 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha384GetKlass" role="function">
<title>xmlSecOpenSSLTransformSha384GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformSha384GetKlass"><primary sortas="xmlSecOpenSSLTransformSha384GetKlass">xmlSecOpenSSLTransformSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformSha384GetKlass
                                                        (void);</programlisting>
<para>
SHA-384 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-384 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha512Id" role="macro">
<title>xmlSecOpenSSLTransformSha512Id</title>
<indexterm zone="xmlSecOpenSSLTransformSha512Id"><primary sortas="xmlSecOpenSSLTransformSha512Id">xmlSecOpenSSLTransformSha512Id</primary></indexterm><programlisting>#define             xmlSecOpenSSLTransformSha512Id</programlisting>
<para>
The SHA512 digest transform klass.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLTransformSha512GetKlass" role="function">
<title>xmlSecOpenSSLTransformSha512GetKlass ()</title>
<indexterm zone="xmlSecOpenSSLTransformSha512GetKlass"><primary sortas="xmlSecOpenSSLTransformSha512GetKlass">xmlSecOpenSSLTransformSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link>   xmlSecOpenSSLTransformSha512GetKlass
                                                        (void);</programlisting>
<para>
SHA-512 digest transform klass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-512 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="XMLSEC-OPENSSL-ERRORS-LIB--CAPS" role="macro">
<title>XMLSEC_OPENSSL_ERRORS_LIB</title>
<indexterm zone="XMLSEC-OPENSSL-ERRORS-LIB--CAPS"><primary sortas="XMLSEC_OPENSSL_ERRORS_LIB">XMLSEC_OPENSSL_ERRORS_LIB</primary></indexterm><programlisting>#define XMLSEC_OPENSSL_ERRORS_LIB                       (ERR_LIB_USER + 57)
</programlisting>
<para>
Macro. The XMLSec library klass for OpenSSL errors reporting functions.</para>
<para>
</para></refsect2>
<refsect2 id="XMLSEC-OPENSSL-ERRORS-FUNCTION--CAPS" role="macro">
<title>XMLSEC_OPENSSL_ERRORS_FUNCTION</title>
<indexterm zone="XMLSEC-OPENSSL-ERRORS-FUNCTION--CAPS"><primary sortas="XMLSEC_OPENSSL_ERRORS_FUNCTION">XMLSEC_OPENSSL_ERRORS_FUNCTION</primary></indexterm><programlisting>#define XMLSEC_OPENSSL_ERRORS_FUNCTION                  0
</programlisting>
<para>
Macro. The XMLSec library functions OpenSSL errors reporting functions.</para>
<para>
</para></refsect2>
<refsect2 id="xmlSecOpenSSLErrorsDefaultCallback" role="function">
<title>xmlSecOpenSSLErrorsDefaultCallback ()</title>
<indexterm zone="xmlSecOpenSSLErrorsDefaultCallback"><primary sortas="xmlSecOpenSSLErrorsDefaultCallback">xmlSecOpenSSLErrorsDefaultCallback</primary></indexterm><programlisting><link linkend="void">void</link>                xmlSecOpenSSLErrorsDefaultCallback  (const <link linkend="char">char</link> *file,
                                                         <link linkend="int">int</link> line,
                                                         const <link linkend="char">char</link> *func,
                                                         const <link linkend="char">char</link> *errorObject,
                                                         const <link linkend="char">char</link> *errorSubject,
                                                         <link linkend="int">int</link> reason,
                                                         const <link linkend="char">char</link> *msg);</programlisting>
<para>
The default OpenSSL errors reporting callback function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>               the error location file name (__FILE__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>line</parameter>&#160;:</term>
<listitem><simpara>               the error location line number (__LINE__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>               the error location function name (__FUNCTION__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorObject</parameter>&#160;:</term>
<listitem><simpara>        the error specific error object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorSubject</parameter>&#160;:</term>
<listitem><simpara>       the error specific error subject.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&#160;:</term>
<listitem><simpara>             the error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>msg</parameter>&#160;:</term>
<listitem><simpara>                the additional error message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
